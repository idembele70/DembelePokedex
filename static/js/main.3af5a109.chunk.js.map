{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/SearchBars/styles.js","components/SearchBars/SearchBar.js","components/SearchBars/SearchBars.jsx","components/hooks/useLike.js","components/hooks/useFetch.js","components/tools/PokemonCard/styles.js","components/tools/PokemonCard/PokemonCard.jsx","components/tools/PokemonSkeleton/styles.js","components/tools/PokemonSkeleton/PokemonSkeleton.jsx","components/tools/ScrollToTop/ScrollToTop.jsx","components/PokedexMainContent/styles.js","components/PokedexMainContent/PokedexMainContent.jsx","components/LikedPokemon/styles.js","components/LikedPokemon/LikedPokemon.jsx","App.jsx","index.jsx"],"names":["makeStyles","link","fontFamily","fontStyle","letterSpacing","textAlign","borderRadius","fontWeight","color","boxShadow","width","pokedex","textDecoration","maxWidth","height","lineHeight","liked","current","backgroundColor","Navbar","classes","useStyles","Box","display","mx","mt","justifyContent","activeClassName","to","className","Button","variant","title","root","margin","form","border","padding","fontSize","searchByName","searchByNumber","searchByType","withStyles","theme","input","position","palette","common","white","transition","transitions","create","join","borderColor","InputBase","SearchBars","onFetchBy","useRef","useState","findByName","findByNumber","findByType","findBy","setFindByName","handleFindBy","e","target","name","value","oldState","toUpperCase","useEffect","window","removeEventListener","Grid","container","spacing","item","SearchBar","placeholder","onChange","autoComplete","defaultProps","useLike","GetAllLiked","JSON","parse","localStorage","getItem","GetLikeById","itemId","includes","ToggleLike","oldData","indexOf","splice","setItem","stringify","useFetch","getLiked","pokemonsList","setPokemonsList","controller","AbortController","a","fetch","signal","response","json","filter","id","data","abort","length","alignItems","hideRoot","image","objectFit","CardContent","marginLeft","pokemonNumber","pokemonName","type","overflow","pokemonTypeOne","likeContainer","right","bottom","PokemonCard","firstType","secondType","isLiked","canHide","COLORTYPE","normal","electric","grass","poison","bug","ghost","fire","water","ground","rock","ice","fighting","steel","psychic","flying","dragon","firstTypeColor","toLowerCase","secondTypeColor","like","setLike","hide","setHide","UseLike","Card","CardMedia","component","onError","onerror","src","Typography","style","pokemonTypeTwo","CardActions","IconButton","FormControlLabel","likeBtn","control","Checkbox","checked","baseURI","match","icon","ThumbUpOutlined","checkedIcon","ThumbUp","skeletonImg","skeletonContent","skeletonTitle","skeletonType","skeletonLike","PokemonSkeleton","Skeleton","xs","transform","cursor","zIndex","ScrollToTop","showBellow","show","setShow","isMount","onScroll","pageYOffset","addEventListener","onClick","scrollTo","top","behavior","PokedexMainContent","useTheme","isSmallDisplay","useMediaQuery","breakpoints","down","PokemonDB","PokemonDBLength","displayPokemons","setDisplayPokemons","displayPokemonsSearched","setDisplaySearch","loading","setLoading","skeletonLength","isMounted","isSearching","handleFetch","maxLength","newData","slice","map","img","Math","random","findWhat","nameToFind","forEach","d","displaySkeleton","Array","from","console","log","names","threshold","pageStart","hasMore","loadMore","loader","LikedPokemon","LikeDB","shoswBellow","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEeA,cAAW,CACxBC,KAAM,CACJC,WAAY,SACZC,UAAW,SACXC,cAAe,UACfC,UAAW,SACXC,aAAc,OACdC,WAAY,OACZC,MAAO,UACPC,UAAW,wCACX,QAAS,CACPC,MAAO,OACPJ,aAAc,SAGlBK,QAAS,CACPC,eAAgB,OAChBC,SAAU,IACVH,MAAO,MACPI,OAAQ,GACRC,WAAY,QAEdC,MAAO,CACLJ,eAAgB,OAChBC,SAAU,IACVH,MAAO,MACPI,OAAQ,GACRC,WAAY,QAEdE,QAAS,CACPC,gBAAiB,wB,OCMNC,MAjCf,WACE,IAAMC,EAAUC,IAChB,OACE,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRb,MAAM,OACNG,SAAU,IACVW,GAAG,OACHC,GAAI,EACJC,eAAe,gBANjB,UAQE,cAAC,IAAD,CACEC,gBAAiBP,EAAQH,QACzBW,GAAG,WACHC,UAAS,UAAKT,EAAQnB,KAAb,YAAqBmB,EAAQT,SAHxC,SAKE,cAACmB,EAAA,EAAD,CAAQC,QAAQ,OAAOF,UAAS,UAAKT,EAAQY,OAA7C,uBAIF,cAAC,IAAD,CACEL,gBAAiBP,EAAQH,QACzBW,GAAG,SACHC,UAAS,UAAKT,EAAQnB,KAAb,YAAqBmB,EAAQJ,OAHxC,SAKE,cAACc,EAAA,EAAD,CAAQC,QAAQ,OAAOF,UAAS,UAAKT,EAAQY,OAA7C,yB,iCC5BOhC,cAAW,CACxBiC,KAAM,CACJvB,MAAO,OACPG,SAAU,IACVqB,OAAQ,kBAEVC,KAAM,CACJzB,MAAO,OACP,QAAS,CACPI,OAAQ,OACRL,UAAW,wCACXH,aAAc,GACd8B,OAAQ,OACRC,QAAS,aAETC,SAAU,GACVvB,WAAY,GACZX,cAAe,SACfI,MAAO,YAGX+B,aAAc,CACZ7B,MAAO,OACPG,SAAU,SAEZ2B,eAAgB,CACd9B,MAAO,IACPwB,OAAQ,cAEVO,aAAc,CACZ/B,MAAO,O,gBC9BIgC,eAAW,SAACC,GAAD,MAAY,CACpCC,MAAO,CACLtC,aAAc,GACduC,SAAU,WACV3B,gBAAiByB,EAAMG,QAAQC,OAAOC,MACtCZ,OAAQ,oBACRE,SAAU,GACVD,QAAS,WACT5B,UAAW,wCACXwC,WAAYN,EAAMO,YAAYC,OAAO,CAAC,eAAgB,eACtD/C,cAAe,SACfI,MAAO,UACPL,UAAW,SACXI,WAAY,SACZL,WAAY,CACV,SACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAkD,KAAK,KACP,UAAW,CACT3C,UAAU,+BACV4C,YAAa,eA5BJX,CA+BXY,KC3BJ,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UAEdpC,GADYqC,kBAAO,GACTpC,KAChB,EAAgCqC,mBAAS,CACvCC,WAAY,GACZC,aAAc,GACdC,WAAY,KAHd,mBAAOC,EAAP,KAAeC,EAAf,KAKMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,GAAc,SAACM,GAAD,mBAAC,eACVA,GADS,kBAEXF,EAAOC,EAAME,mBAEhBd,EAAUW,EAAMC,IAElBG,qBACE,kBAAM,WACJC,OAAOC,oBAAoB,UAAU,kBAEvC,IAEF,IAAQd,EAAyCG,EAAzCH,WAAYC,EAA6BE,EAA7BF,aAAcC,EAAeC,EAAfD,WAClC,OACE,eAACa,EAAA,EAAD,CACEC,WAAS,EACT9C,UAAWT,EAAQa,KACnB2C,QAAS,EACTlD,eAAe,SAJjB,UAME,cAACgD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAD,CACEX,KAAK,aACLY,YAAY,YACZlD,UAAWT,EAAQmB,aACnB6B,MAAOT,EACPqB,SAAUhB,EACViB,aAAa,YAGjB,eAACP,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACC,EAAD,CACEX,KAAK,eACLY,YAAY,SACZX,MAAOR,EACPoB,SAAUhB,EACVnC,UAAWT,EAAQoB,eACnByC,aAAa,UAEf,cAACH,EAAD,CACEX,KAAK,aACLY,YAAY,OACZX,MAAOP,EACPmB,SAAUhB,EACVnC,UAAWT,EAAQqB,aACnBwC,aAAa,gBASvB1B,EAAW2B,aAAe,CACxB1B,UAAW,MAEED,Q,oECzCA4B,MA9Bf,WA2BE,MAAO,CAAEC,YA1BW,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,YA0BpCC,YAxBF,SAACC,GACnB,QAAIH,aAAaC,QAAQ,WACVH,KAAKC,MAAMC,aAAaC,QAAQ,WACjCG,SAASD,IAqBUE,WAhBhB,SAACF,GAClB,GAAIH,aAAaC,QAAQ,UAAW,CAClC,IAAMK,EAAUR,KAAKC,MAAMC,aAAaC,QAAQ,WAChD,GAAIK,EAAQF,SAASD,GAAS,CAC5B,IAAMb,EAAOgB,EAAQC,QAAQJ,GAE7B,OADAG,EAAQE,OAAOlB,EAAM,GACdU,aAAaS,QAAQ,SAAUX,KAAKY,UAAL,YAAmBJ,KAE3D,OAAON,aAAaS,QAClB,SACAX,KAAKY,UAAL,sBAAmBJ,GAAnB,CAA4BH,MAGhC,OAAOH,aAAaS,QAAQ,SAAUX,KAAKY,UAAU,CAACP,QCA3CQ,MAvBf,SAAkBC,GAChB,MAAwCzC,mBAAS,IAAjD,mBAAO0C,EAAP,KAAqBC,EAArB,KACQjB,EAAgBD,IAAhBC,YAkBR,OAjBAb,qBAAU,WACR,IAAM+B,EAAa,IAAIC,gBAWvB,OAVC,sBAAC,gCAAAC,EAAA,sEACuBC,MAAM,qBAAsB,CACjDC,OAAQJ,EAAWI,SAFrB,cACMC,EADN,gBAImBA,EAASC,OAJ5B,UAIMA,EAJN,QAKIT,EALJ,iCAMqBS,EAAKC,QAAO,gBAAGC,EAAH,EAAGA,GAAH,OAAY1B,IAAcO,SAASmB,MANpE,OAMQC,EANR,OAOEV,EAAgBU,GAPlB,yCAQaV,EAAgBO,GAR7B,2CAAD,GAUM,WACLN,EAAWU,WAEZ,IAEI,CAACZ,EAAcA,EAAaa,S,yFCrBtBjH,cAAW,CACxBiC,KAAM,CACJV,QAAS,OACTb,MAAO,IACPI,OAAQ,IACRuB,QAAS,sBACTH,OAAQ,OACRgF,WAAY,SACZrE,SAAU,WACVvC,aAAc,IAEhB6G,SAAU,CACR5F,QAAS,QAEX6F,MAAO,CACLtG,OAAQ,IACRJ,MAAO,IACP2G,UAAW,WAEbC,YAAa,CACXC,WAAY,GACZlF,QAAS,GAEXL,MAAO,CACL,QAAS,CACP9B,WAAY,SACZC,UAAW,SACXI,WAAY,IACZ+B,SAAU,GACVlC,cAAe,WAGnBoH,cAAe,CACbhH,MAAO,UACP0B,OAAQ,gBAEVuF,YAAa,CACXjH,MAAO,WAETkH,KAAM,CACJ,QAAS,CACPC,SAAU,SACVjH,MAAO,GACPR,WAAY,SACZC,UAAW,SACXI,WAAY,IACZ+B,SAAU,EACVlC,cAAe,SACfI,MAAO,QACPH,UAAW,SACXa,gBAAiB,MACjBZ,aAAc,GACd8B,OAAQ,QAGZwF,eAAgB,CACd1F,OAAQ,eAEV2F,cAAe,CACbhF,SAAU,WACViF,MAAO,OACPC,OAAQ,OACR3F,OAAQ,qBACR9B,aAAc,GACd+B,QAAS,EACT3B,MAAO,GACPI,OAAQ,GACR,QAAS,CACPuB,QAAS,EACT3B,MAAO,OACPI,OAAQ,QAEV,8BAA+B,CAC7BoB,OAAQ,MCzDd,SAAS8F,EAAT,GAQI,IAPFlB,EAOC,EAPDA,GACA3C,EAMC,EANDA,KACA8D,EAKC,EALDA,UACAC,EAIC,EAJDA,WACAd,EAGC,EAHDA,MACAe,EAEC,EAFDA,QACAC,EACC,EADDA,QAEMC,EAAY,CAChBC,OAAQ,UACRC,SAAU,UACVC,MAAO,UACPC,OAAQ,UACRC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,IAAK,UACLC,SAAU,UACVC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,OAAQ,WAEJjI,EAAUC,IACViI,EAAiBrB,EACnBI,EAAUJ,EAAUsB,eACpBlB,EAAUC,OACRkB,EAAkBtB,EACpBG,EAAUH,EAAWqB,eACrBlB,EAAUC,OACd,EAAwB5E,mBAASyE,GAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KAKA,EAAwBhG,mBAAS0E,GAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KACQhE,EAAeiE,IAAfjE,WAQR,OACG+D,GACC,cAACjF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACiF,EAAA,EAAD,CAAM/H,QAAQ,WAAWF,UAAWT,EAAQa,KAA5C,UACE,cAAC8H,EAAA,EAAD,CACElI,UAAWT,EAAQgG,MACnBA,MAAOA,EACPpF,MAAM,UACNgI,UAAU,MACVC,QAtBM,SAAChG,GACfA,EAAEC,OAAOgG,QAAU,KACnBjG,EAAEC,OAAOiG,IAAM,8BAsBT,eAAC7C,EAAA,EAAD,CAAazF,UAAWT,EAAQkG,YAAhC,UACE,eAAChG,EAAA,EAAD,CAAKC,QAAQ,OAAOM,UAAWT,EAAQY,MAAvC,UACE,cAACoI,EAAA,EAAD,CAAYrI,QAAQ,QAAQF,UAAWT,EAAQoG,cAA/C,SACGV,IAEH,cAACsD,EAAA,EAAD,CAAYrI,QAAQ,QAAQF,UAAWT,EAAQqG,YAA/C,SACGtD,OAGL,eAAC7C,EAAA,EAAD,CAAKO,UAAWT,EAAQsG,KAAxB,UACE,cAACpG,EAAA,EAAD,CACE+I,MAAO,CAAEnJ,gBAAiBoI,GAC1BzH,UAAWT,EAAQwG,eAFrB,SAIGK,GAAaA,EAAU3D,gBAE1B,cAAChD,EAAA,EAAD,CACEO,UAAWT,EAAQkJ,eACnBD,MAAO,CAAEnJ,gBAAiBsI,GAF5B,SAIGtB,GAAcA,EAAW5D,sBAKhC,cAACiG,EAAA,EAAD,CAAa1I,UAAWT,EAAQyG,cAAhC,SACE,cAAC2C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE5I,UAAWT,EAAQsJ,QACnBC,QACE,cAACC,EAAA,EAAD,CACEC,QAASpB,EACTzE,SAlDC,SAACf,GAClByF,EAAQzF,EAAEC,OAAO2G,SACb5G,EAAEC,OAAO4G,QAAQC,MAAM,UACzBnB,GAAQ,GAEVhE,EAAWkB,IA8CKtG,MAAM,UACNwK,KAAM,cAACC,EAAA,EAAD,CAAiB3I,SAAS,UAChC4I,YAAa,cAACC,EAAA,EAAD,CAAS7I,SAAS,UAC/B6B,KAAI,iBAAY2C,gBAqBpCkB,EAAY9C,aAAe,CACzB+C,UAAW,GACXC,WAAY,GACZE,SAAS,GAEIJ,Q,SCzIAhI,cAAW,CACxBiC,KAAM,CACJvB,MAAO,IACPI,OAAQ,IACR+B,SAAU,WACVT,OAAQ,gCACR9B,aAAc,GACd4B,OAAQ,GAEVkJ,YAAa,CACX1K,MAAO,IACPI,OAAQ,KAEVuK,gBAAiB,CACf3K,MAAO,GACPI,OAAQ,IAEVwK,cAAe,CACb5K,MAAO,OACPI,OAAQ,IAEVyK,aAAc,CACZ7K,MAAO,GACPI,OAAQ,IAEV0K,aAAc,CACZ3I,SAAU,WACViF,MAAO,OACPC,OAAQ,OACR1F,QAAS,EACT3B,MAAO,GACPI,OAAQ,MCCG2K,MA7Bf,WACE,IAAMrK,EAAUC,IAChB,OACE,eAACqD,EAAA,EAAD,CACEG,MAAI,EACJF,WAAS,EACTC,QAAS,EACTsC,WAAW,SACXrF,UAAWT,EAAQa,KALrB,UAOE,cAACyC,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC6G,EAAA,EAAD,CAAU3J,QAAQ,OAAOF,UAAWT,EAAQgK,gBAE9C,eAAC1G,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC9C,UAAWT,EAAQiK,gBAAxC,UACE,cAAC3G,EAAA,EAAD,CAAMG,MAAI,EAAC8G,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAU3J,QAAQ,OAAOF,UAAWT,EAAQkK,kBAE9C,cAAC5G,EAAA,EAAD,CAAMG,MAAI,EAAC8G,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAU3J,QAAQ,OAAOF,UAAWT,EAAQmK,iBAE9C,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAAC8G,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAU3J,QAAQ,OAAOF,UAAWT,EAAQmK,iBAE9C,cAACG,EAAA,EAAD,CAAU3J,QAAQ,SAASF,UAAWT,EAAQoK,sB,iBCvBhDnK,EAAYrB,YAAW,CAC3BiC,KAAM,CACJ2J,UAAW,iBACXC,OAAQ,UACRhJ,SAAU,QACViJ,OAAQ,EACRhE,MAAO,GACPC,OAAQ,MAyCGgE,OAtCf,YAAsC,IAAfC,EAAc,EAAdA,WACf5K,EAAUC,IAChB,EAAwBqC,oBAAS,GAAjC,mBAAOuI,EAAP,KAAaC,EAAb,KACMC,EAAU1I,kBAAO,GAKjB2I,EAAW,WACX5H,OAAO6H,YAAcL,GAAcG,EAAQlL,QAC7CiL,GAAQ,GACHA,GAAQ,IAWjB,OATA3H,qBAAU,WAGR,OAFA4H,EAAQlL,SAAU,EACdkL,EAAQlL,SAASuD,OAAO8H,iBAAiB,SAAUF,GAChD,WACLD,EAAQlL,SAAU,EAClBuD,OAAOC,oBAAoB,UAAU,eACrCD,OAAOC,oBAAoB,SAAS,kBAErC,IAEDwH,GACE,cAAC,IAAD,CACEM,QApBkB,WACtB/H,OAAOgI,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAoBhC7K,UAAWT,EAAQa,KACnBzB,MAAM,WACN8B,SAAS,WCzCFtC,eAAW,CACxBiC,KAAM,CACJvB,MAAO,QACPG,SAAU,KACVqB,OAAQ,UC2JGyK,OAtJf,WACE,IAAMvL,EAAUC,KACVsB,EAAQiK,cACRC,EAAiBC,YAAcnK,EAAMoK,YAAYC,KAAK,OAC5D,EAAqC9G,GAAS,GAA9C,mBAAO+G,EAAP,KAAkBC,EAAlB,KACA,EAA8CxJ,mBAAS,IAAvD,mBAAOyJ,EAAP,KAAwBC,EAAxB,KACA,EAAoD1J,mBAAS,IAA7D,mBAAO2J,EAAP,KAAgCC,EAAhC,KACA,EAA8B5J,oBAAS,GAAvC,mBAAO6J,EAAP,KAAgBC,EAAhB,KACMC,EAAiBZ,EAAiB,EAAI,GACpCpH,EAAgBN,IAAhBM,YACFiI,EAAYjK,kBAAO,GACnBkK,EAAclK,kBAAO,GAC3B,SAASmK,IACP,IAAIC,EAAY,EAMhB,GAJEA,EADEV,EAAgBlG,OAASwG,EAAiBR,EAAUhG,OAC1CkG,EAAgBlG,OAASwG,EAGnCN,EAAgBlG,QAAUgG,EAAUhG,OAASkG,EAAgBlG,QAC7DgG,GAAaA,EAAUhG,OAAQ,CACjC,IAAM6G,EAAUb,EAAUc,MAAMZ,EAAgBlG,OAAQ4G,GACxDT,GAAmB,SAACvH,GAAD,OACjBA,EAAO,sBAEAA,GAFA,YAGAiI,EAAQE,KAAI,gBAAGlH,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,KAAMuD,EAAb,EAAaA,KAAMuG,EAAnB,EAAmBA,IAAnB,OACb,cAAC,EAAD,CACEnH,GAAIA,EACJmB,UAAWP,EAAK,IAAM,GACtBQ,WAAYR,EAAK,IAAM,GACvBvD,KAAMA,EACNiD,MAAO6G,EAEP9F,QAAS1C,EAAYqB,IADhBA,EAAKoH,KAAKC,eAVhB,YAeCL,MAGZN,GAAW,GAGb,SAASY,EAASC,EAAYjK,GAC5BoJ,GAAW,GACXF,EAAiB,IACb,sBAAC,sBAAA9G,EAAA,sEACKyG,EAAUqB,SAAQ,YAA8B,IAA3BxH,EAA0B,EAA1BA,GAAI3C,EAAsB,EAAtBA,KAAMuD,EAAgB,EAAhBA,KAAMuG,EAAU,EAAVA,KAEvB,SAAfI,GAAyBlK,EAAK4G,MAAM3G,IACrB,SAAfiK,IACE3G,EAAK,GAAGqD,MAAM3G,IAAWsD,EAAK,IAAMA,EAAK,GAAGqD,MAAM3G,KACrC,WAAfiK,GAA2BvH,EAAGiE,MAAM3G,KAErCkJ,GAAiB,SAACiB,GAAD,4BACZA,GADY,CAEf,cAAC,EAAD,CACEzH,GAAIA,EACJmB,UAAWP,EAAK,IAAM,GACtBQ,WAAYR,EAAK,IAAM,GACvBvD,KAAMA,EACNiD,MAAO6G,EAEP9F,QAAS1C,EAAYqB,IADhBA,EAAKoH,KAAKC,kBAhBtB,0CAAD,GAuBJX,GAAW,GAmBb,IAAMgB,EAAkB,CACtB,cAAC9J,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT/C,UAAWT,EAAQa,KACnBP,eAAe,SAJjB,SAOG+M,MAAMC,KAAK,CAAEzH,OAAQwG,IAAkB,kBACtC,cAAC/I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,KADF,iBAA0BqJ,KAAKC,eAH7B,cAkBR,OARA5J,qBAAU,WAGR,OAFAoK,QAAQC,IAAI,gBACRlB,EAAUzM,SAAS2M,IAChB,WACLF,EAAUzM,SAAU,KAErB,IAGD,qCACE,cAAC,EAAD,CAAYuC,UA1ChB,SAAmBqL,EAAOzK,GACxBuJ,EAAY1M,SAAU,EACR,eAAV4N,GAAoC,KAAVzK,EAC5BgK,EAAS,OAAQhK,GACE,iBAAVyK,GACTlB,EAAY1M,SAAU,EACtBmN,EAAS,SAAUhK,IACA,eAAVyK,GACTlB,EAAY1M,SAAU,EACtBmN,EAAS,OAAQhK,KAEjBuJ,EAAY1M,SAAU,EACtB2M,QA+BA,cAAC,GAAD,CAAa5B,WAAYa,EAAiB,IAAM,MAE/Cc,EAAY1M,QACX,cAACyD,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT/C,UAAWT,EAAQa,KACnBP,eAAe,SAJjB,SAOG6L,EAAU,eAAiBF,GAFxB,aAKN,cAAC,IAAD,CACEyB,UAAW,IACXC,UAAW,EACXC,QAAS7B,EAAgBlG,OAASiG,EAClC+B,SAAU,kBAAMvB,EAAUzM,SAAW2M,KACrCsB,OAAQV,EALV,SAOE,cAAC9J,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT/C,UAAWT,EAAQa,KACnBP,eAAe,SAJjB,SAOG6L,EAAU,gBAAkBJ,GAFzB,mBCrJDnN,eAAW,CACxBiC,KAAM,CACJvB,MAAO,QACPG,SAAU,KACVqB,OAAQ,UCoHGiN,OAjHf,WACE,IAAM/N,EAAUC,KACVsB,EAAQiK,cACRC,EAAiBC,YAAcnK,EAAMoK,YAAYC,KAAK,OACtDS,EAAiBZ,EAAiB,EAAI,GAC5C,EAAoB3G,GAAS,GAAtB+G,EAAP,oBACA,EAAqC9H,IAA7BC,EAAR,EAAQA,YAAaK,EAArB,EAAqBA,YACf2J,EAAShK,IACf,EAA8C1B,mBAAS,IAAvD,mBAAOyJ,EAAP,KAAwBC,EAAxB,KACMjB,EAAU1I,kBAAO,GACvB,SAASmK,IACP,IAAIC,EAAY,EAOhB,GALEA,EADEV,EAAgBlG,OAASwG,EAAiBR,EAAUhG,OAC1CkG,EAAgBlG,OAASwG,EAGnCN,EAAgBlG,QAAUgG,EAAUhG,OAASkG,EAAgBlG,QAE7DgG,GAAaA,EAAUhG,OAAQ,CACjC,IAAM6G,EAAUb,EAAUc,MAAMZ,EAAgBlG,OAAQ4G,GACxDT,GAAmB,SAACvH,GAAD,OACjBA,EAAO,sBAEAA,GAFA,YAGAiI,EAAQE,KAAI,gBAAGlH,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,KAAMuD,EAAb,EAAaA,KAAMuG,EAAnB,EAAmBA,IAAnB,OACb,cAAC,EAAD,CACEnH,GAAIA,EACJmB,UAAWP,EAAK,IAAM,GACtBQ,WAAYR,EAAK,IAAM,GACvBvD,KAAMA,EACNiD,MAAO6G,EAEP9F,QAAS1C,EAAYqB,IADhBA,EAAKoH,KAAKC,eAVhB,YAeCL,OAId,IAAMU,EAAkB,CACtB,cAAC9J,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT/C,UAAWT,EAAQa,KACnBP,eAAe,SAJjB,SAOG+M,MAAMC,KACL,CACEzH,OACEmI,GAAUA,EAAOnI,OAASwG,EACtB2B,EAAOnI,OACPwG,IAER,kBACE,cAAC/I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,KADF,iBAA0BqJ,KAAKC,eAV/B,cAyBR,OARA5J,qBAAU,WAIR,OAHI4H,EAAQlL,SACV2M,IAEK,WACLzB,EAAQlL,SAAU,KAEnB,IAED,mCACGmO,GAAUA,EAAOnI,OAChB,eAAC,IAAD,CACE6H,UAAW,IACXC,UAAW,EACXC,QAAS7B,GAAmBA,EAAgBlG,OAASmI,EAAOnI,OAC5DgI,SAAU,WACJpC,GAAgBe,IAChBzB,EAAQlL,SAAS2M,KAEvBsB,OAAQV,EARV,UAUE,cAAC,GAAD,CAAaa,YAAaxC,EAAiB,IAAM,MACjD,cAACnI,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT/C,UAAWT,EAAQa,KACnBP,eAAe,SAJjB,SAOGyL,GAFG,gBAMR,cAAC7L,EAAA,EAAD,CACEgB,SAAUuK,EAAiB,OAAS,OACpCxM,UAAU,SACVK,MAAM,QACNI,OAAO,QACP2L,IAAI,KACJlL,QAAQ,OACR2F,WAAW,SACXxF,eAAe,SARjB,wDC/EO4N,OAjBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,EAACxF,UAAWmF,KACtC,cAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,EAA5B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU3N,GAAG,sBCfvB6N,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3af5a109.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  link: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    letterSpacing: \"0.345em\",\n    textAlign: \"center\",\n    borderRadius: \"18px\",\n    fontWeight: \"bold\",\n    color: \"#000000\",\n    boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.15)\",\n    \"& > *\": {\n      width: \"100%\",\n      borderRadius: \"18px\"\n    }\n  },\n  pokedex: {\n    textDecoration: \"none\",\n    maxWidth: 211,\n    width: \"45%\",\n    height: 34,\n    lineHeight: \"34px\"\n  },\n  liked: {\n    textDecoration: \"none\",\n    maxWidth: 171,\n    width: \"37%\",\n    height: 34,\n    lineHeight: \"34px\"\n  },\n  current: {\n    backgroundColor: \"rgba(0, 0, 0, 0.4)\"\n  }\n})\n","import { Box, Button } from \"@material-ui/core\"\nimport React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport useStyles from \"./styles\"\n\nfunction Navbar() {\n  const classes = useStyles()\n  return (\n    <Box\n      display=\"flex\"\n      width=\"90vw\"\n      maxWidth={460}\n      mx=\"auto\"\n      mt={9}\n      justifyContent=\"space-between\"\n    >\n      <NavLink\n        activeClassName={classes.current}\n        to=\"/pokedex\"\n        className={`${classes.link} ${classes.pokedex}`}\n      >\n        <Button variant=\"text\" className={`${classes.title}`}>\n          POKEDEX\n        </Button>\n      </NavLink>\n      <NavLink\n        activeClassName={classes.current}\n        to=\"/liked\"\n        className={`${classes.link} ${classes.liked}`}\n      >\n        <Button variant=\"text\" className={`${classes.title}`}>\n          LIKED\n        </Button>\n      </NavLink>\n    </Box>\n  )\n}\n\nexport default Navbar\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: \"82vw\",\n    maxWidth: 674,\n    margin: \"53px auto 54px\"\n  },\n  form: {\n    width: \"100%\",\n    \"& > *\": {\n      height: \"36px\",\n      boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.07)\",\n      borderRadius: 18,\n      border: \"none\",\n      padding: \"0 0 0 22px\",\n\n      fontSize: 12,\n      lineHeight: 36,\n      letterSpacing: \"0.04em\",\n      color: \"#C4C4C4\"\n    }\n  },\n  searchByName: {\n    width: \"82vw\",\n    maxWidth: \"383px\"\n  },\n  searchByNumber: {\n    width: 102,\n    margin: \"0 18px 0 0\"\n  },\n  searchByType: {\n    width: 131\n  }\n})\n","import { withStyles, InputBase } from \"@material-ui/core\"\n\nexport default withStyles((theme) => ({\n  input: {\n    borderRadius: 18,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 12,\n    padding: \"7px 12px\",\n    boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.07)\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    letterSpacing: \"0.04em\",\n    color: \"#C4C4C4\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontFamily: [\n      \"Roboto\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `0px 0 0 2px rgb(0 0 0 / 15%)`,\n      borderColor: \"#000000\"\n    }\n  }\n}))(InputBase)\n","import { Grid } from \"@material-ui/core\"\nimport React, { useState, useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport useStyles from \"./styles\"\nimport SearchBar from \"./SearchBar\"\n\nfunction SearchBars({ onFetchBy }) {\n  const isMounted = useRef(true)\n  const classes = useStyles()\n  const [findBy, setFindByName] = useState({\n    findByName: \"\",\n    findByNumber: \"\",\n    findByType: \"\"\n  })\n  const handleFindBy = (e) => {\n    const { name, value } = e.target\n    setFindByName((oldState) => ({\n      ...oldState,\n      [name]: value.toUpperCase()\n    }))\n    onFetchBy(name, value)\n  }\n  useEffect(\n    () => () => {\n      window.removeEventListener(\"change\", () => { })\n    },\n    []\n  )\n  const { findByName, findByNumber, findByType } = findBy\n  return (\n    <Grid\n      container\n      className={classes.root}\n      spacing={2}\n      justifyContent=\"center\"\n    >\n      <Grid item>\n        <SearchBar\n          name=\"findByName\"\n          placeholder=\"Search...\"\n          className={classes.searchByName}\n          value={findByName}\n          onChange={handleFindBy}\n          autoComplete=\"false\"\n        />\n      </Grid>\n      <Grid item>\n        <SearchBar\n          name=\"findByNumber\"\n          placeholder=\"Number\"\n          value={findByNumber}\n          onChange={handleFindBy}\n          className={classes.searchByNumber}\n          autoComplete=\"false\"\n        />\n        <SearchBar\n          name=\"findByType\"\n          placeholder=\"Type\"\n          value={findByType}\n          onChange={handleFindBy}\n          className={classes.searchByType}\n          autoComplete=\"false\"\n        />\n      </Grid>\n    </Grid>\n  )\n}\nSearchBars.propTypes = {\n  onFetchBy: PropTypes.func\n}\nSearchBars.defaultProps = {\n  onFetchBy: null\n}\nexport default SearchBars\n","import React from \"react\"\n\nfunction useLike() {\n  const GetAllLiked = () => JSON.parse(localStorage.getItem(\"LikeDB\"))\n\n  const GetLikeById = (itemId) => {\n    if (localStorage.getItem(\"LikeDB\")) {\n      const data = JSON.parse(localStorage.getItem(\"LikeDB\"))\n      return data.includes(itemId)\n    }\n    return false\n  }\n\n  const ToggleLike = (itemId) => {\n    if (localStorage.getItem(\"LikeDB\")) {\n      const oldData = JSON.parse(localStorage.getItem(\"LikeDB\"))\n      if (oldData.includes(itemId)) {\n        const item = oldData.indexOf(itemId)\n        oldData.splice(item, 1)\n        return localStorage.setItem(\"LikeDB\", JSON.stringify([...oldData]))\n      }\n      return localStorage.setItem(\n        \"LikeDB\",\n        JSON.stringify([...oldData, itemId])\n      )\n    }\n    return localStorage.setItem(\"LikeDB\", JSON.stringify([itemId]))\n  }\n\n  return { GetAllLiked, GetLikeById, ToggleLike }\n}\n\nexport default useLike\n","import React, { useEffect, useState } from \"react\"\nimport useLike from \"./useLike\"\n\nfunction useFetch(getLiked) {\n  const [pokemonsList, setPokemonsList] = useState([])\n  const { GetAllLiked } = useLike()\n  useEffect(() => {\n    const controller = new AbortController()\n    ;(async () => {\n      const response = await fetch(\"data/pokemons.json\", {\n        signal: controller.signal\n      })\n      const json = await response.json()\n      if (getLiked) {\n        const data = await json.filter(({ id }) => GetAllLiked().includes(id))\n        setPokemonsList(data)\n      } else await setPokemonsList(json)\n    })()\n    return () => {\n      controller.abort()\n    }\n  }, [])\n\n  return [pokemonsList, pokemonsList.length]\n}\n\nexport default useFetch\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    display: \"flex\",\n    width: 241,\n    height: 115,\n    padding: \"26px 37px 25px 27px\",\n    margin: \"auto\",\n    alignItems: \"center\",\n    position: \"relative\",\n    borderRadius: 18\n  },\n  hideRoot: {\n    display: \"none\"\n  },\n  image: {\n    height: 117,\n    width: 126,\n    objectFit: \"contain\"\n  },\n  CardContent: {\n    marginLeft: 32,\n    padding: 0\n  },\n  title: {\n    \"& > *\": {\n      fontFamily: \"Roboto\",\n      fontStyle: \"normal\",\n      fontWeight: 900,\n      fontSize: 12,\n      letterSpacing: \"0.04em\"\n    }\n  },\n  pokemonNumber: {\n    color: \"#9E9E9E\",\n    margin: \"0 6.25px 0 0\"\n  },\n  pokemonName: {\n    color: \"#000000\"\n  },\n  type: {\n    \"& > *\": {\n      overflow: \"hidden\",\n      width: 52,\n      fontFamily: \"Roboto\",\n      fontStyle: \"normal\",\n      fontWeight: 900,\n      fontSize: 8,\n      letterSpacing: \"0.04em\",\n      color: \"white\",\n      textAlign: \"center\",\n      backgroundColor: \"red\",\n      borderRadius: 18,\n      border: \"1px\"\n    }\n  },\n  pokemonTypeOne: {\n    margin: \"6px 0 3px 0\"\n  },\n  likeContainer: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"10px\",\n    border: \" 1px solid #E4E4E4\",\n    borderRadius: 50,\n    padding: 0,\n    width: 29,\n    height: 29,\n    \"& > *\": {\n      padding: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0\n    }\n  }\n})\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  Typography,\n  Grid\n} from \"@material-ui/core\"\nimport { ThumbUp, ThumbUpOutlined } from \"@material-ui/icons\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport useStyles from \"./styles\"\nimport UseLike from \"../../hooks/useLike\"\n\nfunction PokemonCard({\n  id,\n  name,\n  firstType,\n  secondType,\n  image,\n  isLiked,\n  canHide\n}) {\n  const COLORTYPE = {\n    normal: \"#CACACA\",\n    electric: \"#FFE175\",\n    grass: \"#B4FE7B\",\n    poison: \"#BF8CD1\",\n    bug: \"#D1E16F\",\n    ghost: \"#805594\",\n    fire: \"#FF8A8A\",\n    water: \"#88D1FB\",\n    ground: \"#CA9F5E\",\n    rock: \"#898373\",\n    ice: \"#C6EAFF\",\n    fighting: \"#C6EAFF\",\n    steel: \"#E4E4E4\",\n    psychic: \"#FFB7FC\",\n    flying: \"#5F9FFF\",\n    dragon: \"#C699FF\"\n  }\n  const classes = useStyles()\n  const firstTypeColor = firstType\n    ? COLORTYPE[firstType.toLowerCase()]\n    : COLORTYPE.normal\n  const secondTypeColor = secondType\n    ? COLORTYPE[secondType.toLowerCase()]\n    : COLORTYPE.normal\n  const [like, setLike] = useState(isLiked)\n  const onerror = (e) => {\n    e.target.onerror = null\n    e.target.src = \"img/assets/404-group.png\"\n  }\n  const [hide, setHide] = useState(canHide)\n  const { ToggleLike } = UseLike()\n  const handleLike = (e) => {\n    setLike(e.target.checked)\n    if (e.target.baseURI.match(\"liked\")) {\n      setHide(true)\n    }\n    ToggleLike(id)\n  }\n  return (\n    !hide && (\n      <Grid item>\n        <Card variant=\"outlined\" className={classes.root}>\n          <CardMedia\n            className={classes.image}\n            image={image}\n            title=\"pokemon\"\n            component=\"img\"\n            onError={onerror}\n          />\n          <CardContent className={classes.CardContent}>\n            <Box display=\"flex\" className={classes.title}>\n              <Typography variant=\"body2\" className={classes.pokemonNumber}>\n                {id}\n              </Typography>\n              <Typography variant=\"body2\" className={classes.pokemonName}>\n                {name}\n              </Typography>\n            </Box>\n            <Box className={classes.type}>\n              <Box\n                style={{ backgroundColor: firstTypeColor }}\n                className={classes.pokemonTypeOne}\n              >\n                {firstType && firstType.toUpperCase()}\n              </Box>\n              <Box\n                className={classes.pokemonTypeTwo}\n                style={{ backgroundColor: secondTypeColor }}\n              >\n                {secondType && secondType.toUpperCase()}\n              </Box>\n            </Box>\n          </CardContent>\n\n          <CardActions className={classes.likeContainer}>\n            <IconButton>\n              <FormControlLabel\n                className={classes.likeBtn}\n                control={\n                  <Checkbox\n                    checked={like}\n                    onChange={handleLike}\n                    color=\"primary\"\n                    icon={<ThumbUpOutlined fontSize=\"small\" />}\n                    checkedIcon={<ThumbUp fontSize=\"small\" />}\n                    name={`likeBtn${id}`}\n                  />\n                }\n              />\n            </IconButton>\n          </CardActions>\n        </Card>\n      </Grid>\n    )\n  )\n}\n\nPokemonCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  firstType: PropTypes.string,\n  secondType: PropTypes.string,\n  image: PropTypes.string.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  canHide: PropTypes.bool\n}\nPokemonCard.defaultProps = {\n  firstType: \"\",\n  secondType: \"\",\n  canHide: false\n}\nexport default PokemonCard\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: 307,\n    height: 168,\n    position: \"relative\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    borderRadius: 18,\n    margin: 0\n  },\n  skeletonImg: {\n    width: 126,\n    height: 117\n  },\n  skeletonContent: {\n    width: 85,\n    height: 47\n  },\n  skeletonTitle: {\n    width: \"100%\",\n    height: 14\n  },\n  skeletonType: {\n    width: 52,\n    height: 12\n  },\n  skeletonLike: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"10px\",\n    padding: 0,\n    width: 29,\n    height: 29\n  }\n})\n","import { Grid } from \"@material-ui/core\"\nimport Skeleton from \"@material-ui/lab/Skeleton\"\nimport React from \"react\"\nimport useStyles from \"./styles\"\n\nfunction PokemonSkeleton() {\n  const classes = useStyles()\n  return (\n    <Grid\n      item\n      container\n      spacing={4}\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <Grid item>\n        <Skeleton variant=\"rect\" className={classes.skeletonImg} />\n      </Grid>\n      <Grid item container className={classes.skeletonContent}>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonTitle} />\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonType} />\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonType} />\n        </Grid>\n        <Skeleton variant=\"circle\" className={classes.skeletonLike} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PokemonSkeleton\n","import { makeStyles } from \"@material-ui/core\"\nimport ArrowDropDownCircleRoundedIcon from \"@material-ui/icons/ArrowDropDownCircleRounded\"\nimport PropTypes from \"prop-types\"\nimport React, { useCallback, useEffect, useState, useRef } from \"react\"\n\nconst useStyles = makeStyles({\n  root: {\n    transform: \"rotate(180deg)\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    zIndex: 2,\n    right: 10,\n    bottom: 10\n  }\n})\nfunction ScrollToTop({ showBellow }) {\n  const classes = useStyles()\n  const [show, setShow] = useState(false)\n  const isMount = useRef(false)\n\n  const handleScrollTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" })\n  }\n  const onScroll = () => {\n    if (window.pageYOffset > showBellow && isMount.current) {\n      setShow(true)\n    } else setShow(false)\n  }\n  useEffect(() => {\n    isMount.current = true\n    if (isMount.current) window.addEventListener(\"scroll\", onScroll)\n    return () => {\n      isMount.current = false\n      window.removeEventListener(\"scroll\", () => { })\n      window.removeEventListener(\"click\", () => { })\n    }\n  }, [])\n  return (\n    show && (\n      <ArrowDropDownCircleRoundedIcon\n        onClick={handleScrollTop}\n        className={classes.root}\n        color=\"disabled\"\n        fontSize=\"large\"\n      />\n    )\n  )\n}\n\nScrollToTop.propTypes = {\n  showBellow: PropTypes.number.isRequired\n}\n\nexport default ScrollToTop\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: \"100vw\",\n    maxWidth: 1017,\n    margin: \"auto\"\n  }\n})\n","import { Grid, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport InfiniteScroll from \"react-infinite-scroller\"\nimport useFetch from \"../hooks/useFetch\"\nimport useLike from \"../hooks/useLike\"\nimport SearchBars from \"../SearchBars/SearchBars\"\nimport { PokemonCard } from \"../tools\"\nimport PokemonSkeleton from \"../tools/PokemonSkeleton/PokemonSkeleton\"\nimport ScrollToTop from \"../tools/ScrollToTop/ScrollToTop\"\nimport useStyles from \"./styles\"\n\nfunction PokedexMainContent() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const isSmallDisplay = useMediaQuery(theme.breakpoints.down(\"xs\"))\n  const [PokemonDB, PokemonDBLength] = useFetch(false)\n  const [displayPokemons, setDisplayPokemons] = useState([])\n  const [displayPokemonsSearched, setDisplaySearch] = useState([])\n  const [loading, setLoading] = useState(true)\n  const skeletonLength = isSmallDisplay ? 6 : 12\n  const { GetLikeById } = useLike()\n  const isMounted = useRef(true)\n  const isSearching = useRef(false)\n  function handleFetch() {\n    let maxLength = 0\n    if (displayPokemons.length + skeletonLength < PokemonDB.length)\n      maxLength = displayPokemons.length + skeletonLength\n    else\n      maxLength =\n        displayPokemons.length + (PokemonDB.length - displayPokemons.length)\n    if (PokemonDB && PokemonDB.length) {\n      const newData = PokemonDB.slice(displayPokemons.length, maxLength)\n      setDisplayPokemons((oldData) =>\n        oldData\n          ? [\n            ...oldData,\n            ...newData.map(({ id, name, type, img }) => (\n              <PokemonCard\n                id={id}\n                firstType={type[0] || \"\"}\n                secondType={type[1] || \"\"}\n                name={name}\n                image={img}\n                key={id + Math.random()}\n                isLiked={GetLikeById(id)}\n              />\n            ))\n          ]\n          : [...newData]\n      )\n    }\n    setLoading(false)\n  }\n\n  function findWhat(nameToFind, value) {\n    setLoading(true)\n    setDisplaySearch([])\n      ; (async () => {\n        await PokemonDB.forEach(({ id, name, type, img }) => {\n          if (\n            (nameToFind === \"name\" && name.match(value)) ||\n            (nameToFind === \"type\" &&\n              (type[0].match(value) || (type[1] && type[1].match(value)))) ||\n            (nameToFind === \"number\" && id.match(value))\n          ) {\n            setDisplaySearch((d) => [\n              ...d,\n              <PokemonCard\n                id={id}\n                firstType={type[0] || \"\"}\n                secondType={type[1] || \"\"}\n                name={name}\n                image={img}\n                key={id + Math.random()}\n                isLiked={GetLikeById(id)}\n              />\n            ])\n          }\n        })\n      })()\n    setLoading(false)\n  }\n\n  function onFetchBy(names, value) {\n    isSearching.current = true\n    if (names === \"findByName\" && value !== \"\") {\n      findWhat(\"name\", value)\n    } else if (names === \"findByNumber\") {\n      isSearching.current = true\n      findWhat(\"number\", value)\n    } else if (names === \"findByType\") {\n      isSearching.current = true\n      findWhat(\"type\", value)\n    } else {\n      isSearching.current = false\n      handleFetch()\n    }\n  }\n\n  const displaySkeleton = [\n    <Grid\n      container\n      spacing={4}\n      className={classes.root}\n      justifyContent=\"center\"\n      key=\"rootGrid2\"\n    >\n      {Array.from({ length: skeletonLength }, () => (\n        <Grid item key={`loading${Math.random()}`}>\n          <PokemonSkeleton />\n        </Grid>\n      ))}\n    </Grid>\n  ]\n\n  useEffect(() => {\n    console.log(\"new render !\")\n    if (isMounted.current) handleFetch()\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return (\n    <>\n      <SearchBars onFetchBy={onFetchBy} />\n      <ScrollToTop showBellow={isSmallDisplay ? 510 : 350} />\n\n      {isSearching.current ? (\n        <Grid\n          container\n          spacing={4}\n          className={classes.root}\n          justifyContent=\"center\"\n          key=\"rootGrid2\"\n        >\n          {loading ? \"searching...\" : displayPokemonsSearched}\n        </Grid>\n      ) : (\n        <InfiniteScroll\n          threshold={800}\n          pageStart={0}\n          hasMore={displayPokemons.length < PokemonDBLength}\n          loadMore={() => isMounted.current && handleFetch()}\n          loader={displaySkeleton}\n        >\n          <Grid\n            container\n            spacing={4}\n            className={classes.root}\n            justifyContent=\"center\"\n            key=\"rootGrid2\"\n          >\n            {loading ? \"searching....\" : displayPokemons}\n          </Grid>\n        </InfiniteScroll>\n      )}\n    </>\n  )\n}\n\nexport default PokedexMainContent\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles({\n  root: {\n    width: \"100vw\",\n    maxWidth: 1017,\n    margin: \"auto\",\n  },\n});\n","import { Grid, useMediaQuery, useTheme, Box } from \"@material-ui/core\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport InfiniteScroll from \"react-infinite-scroller\"\nimport useFetch from \"../hooks/useFetch\"\nimport { PokemonSkeleton, PokemonCard } from \"../tools\"\nimport useStyles from \"./styles\"\nimport useLike from \"../hooks/useLike\"\nimport ScrollToTop from \"../tools/ScrollToTop/ScrollToTop\"\n\nfunction LikedPokemon() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const isSmallDisplay = useMediaQuery(theme.breakpoints.down(\"xs\"))\n  const skeletonLength = isSmallDisplay ? 6 : 12\n  const [PokemonDB] = useFetch(true)\n  const { GetAllLiked, GetLikeById } = useLike()\n  const LikeDB = GetAllLiked()\n  const [displayPokemons, setDisplayPokemons] = useState([])\n  const isMount = useRef(true)\n  function handleFetch() {\n    let maxLength = 0\n    if (displayPokemons.length + skeletonLength < PokemonDB.length)\n      maxLength = displayPokemons.length + skeletonLength\n    else\n      maxLength =\n        displayPokemons.length + (PokemonDB.length - displayPokemons.length)\n\n    if (PokemonDB && PokemonDB.length) {\n      const newData = PokemonDB.slice(displayPokemons.length, maxLength)\n      setDisplayPokemons((oldData) =>\n        oldData\n          ? [\n            ...oldData,\n            ...newData.map(({ id, name, type, img }) => (\n              <PokemonCard\n                id={id}\n                firstType={type[0] || \"\"}\n                secondType={type[1] || \"\"}\n                name={name}\n                image={img}\n                key={id + Math.random()}\n                isLiked={GetLikeById(id)}\n              />\n            ))\n          ]\n          : [...newData]\n      )\n    }\n  }\n  const displaySkeleton = [\n    <Grid\n      container\n      spacing={4}\n      className={classes.root}\n      justifyContent=\"center\"\n      key=\"rootGrid2\"\n    >\n      {Array.from(\n        {\n          length:\n            LikeDB && LikeDB.length < skeletonLength\n              ? LikeDB.length\n              : skeletonLength\n        },\n        () => (\n          <Grid item key={`loading${Math.random()}`}>\n            <PokemonSkeleton />\n          </Grid>\n        )\n      )}\n    </Grid>\n  ]\n  useEffect(() => {\n    if (isMount.current) {\n      handleFetch()\n    }\n    return () => {\n      isMount.current = false\n    }\n  }, [])\n  return (\n    <>\n      {LikeDB && LikeDB.length ? (\n        <InfiniteScroll\n          threshold={800}\n          pageStart={0}\n          hasMore={displayPokemons && displayPokemons.length < LikeDB.length}\n          loadMore={() => {\n            if (isSmallDisplay) handleFetch(true)\n            if (isMount.current) handleFetch(true)\n          }}\n          loader={displaySkeleton}\n        >\n          <ScrollToTop shoswBellow={isSmallDisplay ? 510 : 350} />\n          <Grid\n            container\n            spacing={4}\n            className={classes.root}\n            justifyContent=\"center\"\n            key=\"rootGrid1\"\n          >\n            {displayPokemons}\n          </Grid>\n        </InfiniteScroll>\n      ) : (\n        <Box\n          fontSize={isSmallDisplay ? \"2rem\" : \"4rem\"}\n          textAlign=\"center\"\n          width=\"100vw\"\n          height=\"100vh\"\n          top=\"0%\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          It look like you don&apos;t like pokemons...\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport default LikedPokemon\n","import React from \"react\"\nimport {\n  BrowserRouter as Router, Redirect, Route,\n  Switch\n} from \"react-router-dom\"\nimport {\n  LikedPokemon, Navbar, PokedexMainContent\n} from \"./components\"\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/liked\" exact component={LikedPokemon} />\n        <Route path=\"/pokedex\" exact>\n          <PokedexMainContent />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/pokedex\" />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}